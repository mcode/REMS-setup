name: Playwright Tests
on:
  push:
    branches: [ main, dev, tagging-docker-compose ]
  pull_request:
    branches: [ main, dev, tagging-docker-compose ]
  workflow_dispatch:
    inputs:
      rems-setup-branch:
        description: 'rems set up branch'     
        required: true
        default: 'main'
      request-generator-branch:
        description: 'request generator branch'     
        required: true
        default: 'main'  
      pims-branch:
        description: 'pims branch'     
        required: true
        default: 'main'      
      rems-admin-branch:
        description: 'rems admin branch'     
        required: true
        default: 'main'    
      rems-smart-on-fhir-branch:
        description: 'rems smart on fhir branch'     
        required: true
        default: 'main'   
      rems-test-ehr-branch:
        description: 'rems test-ehr branch'     
        required: true
        default: 'main'   

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: mcode/rems-setup
          path: rems-setup
          ref: ${{ github.event.inputs.rems-setup-branch }}

      - name: Checkout test-ehr repo
        uses: actions/checkout@v4
        with:
          repository: mcode/test-ehr
          path: test-ehr
          ref: ${{ github.event.inputs.rems-test-ehr-branch }}

      - name: Checkout request-generator repo
        uses: actions/checkout@v4
        with:
          repository: mcode/request-generator
          path: request-generator
          ref: ${{ github.event.inputs.request-generator-branch }}

      - name: Checkout rems-admin repo
        uses: actions/checkout@v2
        with:
          repository: mcode/rems-admin
          path: rems-admin
          submodule: true
          ref: ${{ github.event.inputs.rems-admin-branch }}
  
      - name: Check submodules 
        working-directory: ./rems-admin
        run: ls src/rems-cds-hooks

      - name: Checkout pims repo
        uses: actions/checkout@v4
        with:
          repository: mcode/pims
          path: pims
          ref: ${{ github.event.inputs.pims-branch }}

      - name: Checkout rems-smart-on-fhir repo
        uses: actions/checkout@v4
        with:
          repository: mcode/rems-smart-on-fhir
          path: rems-smart-on-fhir
          submodule: 'recursive'
          ref: ${{ github.event.inputs.rems-smart-on-fhir-branch }}

      - name: Check submodules 
        working-directory: ./rems-smart-on-fhir
        run: ls src; ls src/cds-hooks; ls src/cds-hooks/resources;

      - name: Start containers
        working-directory: ./rems-setup
        run: docker-compose -f docker-compose-local-build.yml up -d

      - name: Wait for rems-administrator healthcheck
        run: echo $(docker ps | grep rems_dev_rems-administrator); timeout 15m sh -c 'until echo docker ps | grep rems_dev_rems-administrator | grep -qw healthy; do echo "Waiting for container to be healthy..."; echo $(docker inspect --format "{{json .State.Health }}" rems_dev_rems-administrator | jq); echo $(docker logs --since=1m rems_dev_rems-administrator); echo $(docker ps | grep rems_dev_rems-administrator); echo $(docker ps); sleep 1m; done'
      
      - name: Wait for request-generator healthcheck
        run: echo $(docker ps | grep rems_dev_request-generator); timeout 15m sh -c 'until docker ps | grep rems_dev_request-generator | grep -qw healthy; do echo "Waiting for container to be healthy..."; echo $(docker inspect --format "{{json .State.Health }}" rems_dev_request-generator | jq); echo $(docker logs --since=1m rems_dev_request-generator); echo $(docker ps | grep rems_dev_request-generator); echo $(docker ps); sleep 1m; done'
      
      - name: Wait for rems-smart-on-fhir healthcheck
        run: echo $(docker ps | grep rems_dev_smart-on-fhir); timeout 15m sh -c 'until docker ps | grep rems_dev_rems-smart-on-fhir | grep -qw healthy; do echo "Waiting for container to be healthy..."; echo $(docker inspect --format "{{json .State.Health }}" rems_dev_rems-smart-on-fhir | jq); echo $(docker logs --since=1m rems_dev_rems-smart-on-fhir); $(docker ps | grep rems_dev_smart-on-fhir); echo $(docker ps); sleep 1m; done'

      - name: Wait for pims healthcheck
        run: $(docker ps | grep rems_dev_pims; timeout 15m sh -c 'until docker ps | grep rems_dev_pims | grep -qw healthy; do echo "Waiting for container to be healthy..."; echo $(docker inspect --format "{{json .State.Health }}" rems_dev_pims | jq); echo $(docker logs --since=1m rems_dev_pims); $(docker ps | grep rems_dev_pims]; echo $(docker ps); sleep 1m; done'
      
      - name: Wait for test-ehr healthcheck
        run: $(docker ps | grep rems_dev_test-ehr; timeout 15m sh -c 'until docker ps | grep rems_dev_test-ehr | grep -qw healthy; do echo "Waiting for container to be healthy..."; $(docker inspect --format "{{json .State.Health }}" rems_dev_test-ehr | jq); echo $(docker logs --since=1m rems_dev_test-ehr); $(docker ps | grep rems_dev_test-ehr); echo $(docker ps); sleep 1m; done'

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: ./rems-setup
        run: npm ci
      - name: Install Playwright Browsers
        working-directory: ./rems-setup
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: ./rems-setup
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
